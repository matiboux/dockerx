#!/bin/sh

# DockerX (v0.1.0)
# Wrapper for running docker programs & docker shell environments.
# https://github.com/matiboux/dockerx
# MIT License
# Copyright (c) 2024 Matiboux

VERSION="0.1.0"

# Default options
PRINT_HELP=false
PRINT_VERSION=false
UPDATE=false
DRY_RUN=false
QUIET=false

# Parse options
while true; do
	case "$1" in
		'--help' | '-h' )
			# Print help
			PRINT_HELP=true
			shift
			;;
		'--version' | '-v' )
			# Print version
			PRINT_VERSION=true
			shift
			;;
		'--update')
			# Update DockerX
			UPDATE=true
			shift
			;;
		'-n')
			# Dry run, print docker command without running it
			DRY_RUN=true
			shift
			;;
		'-q')
			# Quiet, do not print docker command
			QUIET=true
			shift
			;;
		*)
			break
			;;
	esac
done

if [ "$PRINT_HELP" = true ]; then
	# Print help and exit
	echo 'Usage:'
	echo "  $0 [options] <image> [ [...docker_options] -- ] [...command]"
	echo "  $0 [options] <image> [ [...docker_options] -- ] [@preset] [...args]"
	echo "  $0 --set-context [path]"
	echo ''
	echo 'DockerX will run the specified docker image in the context of your'
	echo 'working directory. '
	echo ''
	echo 'Arguments:'
	echo '  options: DockerX options'
	echo '  image: Docker image to run'
	echo '  docker_options: Options passed to docker run command'
	echo '  command: Command to run in the container'
	echo '  @preset: DockerX preset (shortcut for a command)'
	echo '  args: Arguments appended to the preset command'
	echo ''
	echo 'Arguments details:'
	echo '  options:'
	echo '    -h, --help         Print this help and exit'
	echo '    -v, --version      Print version and exit'
	echo '    --update           Update DockerX and exit'
	echo '    -c, --set-context  Set the DockerX context directory'
	echo '    -n             Dry run, print docker command without running it'
	echo '    -q             Quiet, do not print docker command'
	echo '  @preset: One of the following:'
	echo '    $, @sh  Run a `sh` shell in the container'
	exit 0
fi
